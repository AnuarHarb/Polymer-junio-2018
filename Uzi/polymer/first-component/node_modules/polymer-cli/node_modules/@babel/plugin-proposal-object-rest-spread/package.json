{
  "_args": [
    [
      {
        "raw": "@babel/plugin-proposal-object-rest-spread@https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
        "scope": "@babel",
        "escapedName": "@babel%2fplugin-proposal-object-rest-spread",
        "name": "@babel/plugin-proposal-object-rest-spread",
        "rawSpec": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
        "spec": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
        "type": "remote"
      },
      "/Users/administradorcito/Desktop/Polymer-junio-2018/Uzi/polymer/first-component/node_modules/polymer-cli"
    ]
  ],
  "_from": "@babel/plugin-proposal-object-rest-spread@https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
  "_id": "@babel/plugin-proposal-object-rest-spread@7.0.0-beta.49",
  "_inCache": true,
  "_location": "/polymer-cli/@babel/plugin-proposal-object-rest-spread",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@babel/plugin-proposal-object-rest-spread@https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
    "scope": "@babel",
    "escapedName": "@babel%2fplugin-proposal-object-rest-spread",
    "name": "@babel/plugin-proposal-object-rest-spread",
    "rawSpec": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
    "spec": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli",
    "/polymer-cli/polymer-build"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
  "_shasum": "6d0cd60f7a7bd7c444a371c4e9470bff02f5777c",
  "_shrinkwrap": null,
  "_spec": "@babel/plugin-proposal-object-rest-spread@https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.0.0-beta.49.tgz",
  "_where": "/Users/administradorcito/Desktop/Polymer-junio-2018/Uzi/polymer/first-component/node_modules/polymer-cli",
  "dependencies": {
    "@babel/helper-plugin-utils": "7.0.0-beta.49",
    "@babel/plugin-syntax-object-rest-spread": "7.0.0-beta.49"
  },
  "description": "Compile object rest and spread to ES5",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.49",
    "@babel/helper-plugin-test-runner": "7.0.0-beta.49"
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "@babel/plugin-proposal-object-rest-spread",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.49"
  },
  "readme": "# @babel/plugin-proposal-object-rest-spread\n\n> This plugin allows Babel to transform rest properties for object destructuring assignment and spread properties for object literals.\n\n## Example\n\n### Rest Properties\n\n```js\nlet { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };\nconsole.log(x); // 1\nconsole.log(y); // 2\nconsole.log(z); // { a: 3, b: 4 }\n```\n\n### Spread Properties\n\n```js\nlet n = { x, y, ...z };\nconsole.log(n); // { x: 1, y: 2, a: 3, b: 4 }\n```\n\n## Installation\n\n```sh\nnpm install --save-dev @babel/plugin-proposal-object-rest-spread\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"@babel/plugin-proposal-object-rest-spread\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins @babel/plugin-proposal-object-rest-spread script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"@babel/plugin-proposal-object-rest-spread\"]\n});\n```\n\n## Options\n\nBy default, this plugin will produce spec compliant code by using Babel's `objectSpread` helper.\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnabling this option will use Babel's `extends` helper, which is basically the same as `Object.assign` (see `useBuiltIns` below to use it directly).\n\n:warning: Please keep in mind that even if they're almost equivalent, there's an important difference between spread and `Object.assign`: **spread _defines_ new properties, while `Object.assign()` _sets_ them**, so using this mode might produce unexpected results in some cases.\n\nFor detailed information please check out [Spread VS. Object.assign](http://2ality.com/2016/10/rest-spread-properties.html#spreading-objects-versus-objectassign) and [Assigning VS. defining properties](http://exploringjs.com/es6/ch_oop-besides-classes.html#sec_assigning-vs-defining-properties).\n\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nEnabling this option will use `Object.assign` directly instead of the Babel's `extends` helper. \n\n##### Example\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\n    [\"@babel/plugin-proposal-object-rest-spread\", { \"loose\": true, \"useBuiltIns\": true }]\n  ]\n}\n```\n\n**In**\n\n```js\nz = { x, ...y };\n```\n\n**Out**\n\n```js\nz = Object.assign({ x }, y);\n```\n\n## References\n\n* [Proposal: Object Rest/Spread Properties for ECMAScript](https://github.com/sebmarkbage/ecmascript-rest-spread)\n* [Spec](http://sebmarkbage.github.io/ecmascript-rest-spread)\n* [Spread VS. Object.assign](http://2ality.com/2016/10/rest-spread-properties.html#spreading-objects-versus-objectassign)\n* [Assigning VS. defining properties](http://exploringjs.com/es6/ch_oop-besides-classes.html#sec_assigning-vs-defining-properties)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-proposal-object-rest-spread"
  },
  "version": "7.0.0-beta.49"
}
