{
  "_args": [
    [
      {
        "raw": "@babel/plugin-transform-for-of@https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
        "scope": "@babel",
        "escapedName": "@babel%2fplugin-transform-for-of",
        "name": "@babel/plugin-transform-for-of",
        "rawSpec": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
        "spec": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
        "type": "remote"
      },
      "/Users/administradorcito/Desktop/Polymer-junio-2018/Uzi/polymer/first-component/node_modules/polymer-cli"
    ]
  ],
  "_from": "@babel/plugin-transform-for-of@https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
  "_id": "@babel/plugin-transform-for-of@7.0.0-beta.49",
  "_inCache": true,
  "_location": "/polymer-cli/@babel/plugin-transform-for-of",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@babel/plugin-transform-for-of@https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
    "scope": "@babel",
    "escapedName": "@babel%2fplugin-transform-for-of",
    "name": "@babel/plugin-transform-for-of",
    "rawSpec": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
    "spec": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli",
    "/polymer-cli/polymer-build"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
  "_shasum": "3ec72726bf1d89a0d4d511be7a9549066f57aade",
  "_shrinkwrap": null,
  "_spec": "@babel/plugin-transform-for-of@https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.0.0-beta.49.tgz",
  "_where": "/Users/administradorcito/Desktop/Polymer-junio-2018/Uzi/polymer/first-component/node_modules/polymer-cli",
  "dependencies": {
    "@babel/helper-plugin-utils": "7.0.0-beta.49"
  },
  "description": "Compile ES2015 for...of to ES5",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.49",
    "@babel/helper-plugin-test-runner": "7.0.0-beta.49"
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "@babel/plugin-transform-for-of",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.49"
  },
  "readme": "# @babel/plugin-transform-for-of\n\n> Compile ES2015 for...of to ES5\n\n## Example\n\n**In**\n\n```js\nfor (var i of foo) {}\n```\n\n**Out**\n\n```js\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n  for (var _iterator = foo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n    var i = _step.value;\n  }\n} catch (err) {\n  _didIteratorError = true;\n  _iteratorError = err;\n} finally {\n  try {\n    if (!_iteratorNormalCompletion && _iterator.return != null) {\n      _iterator.return();\n    }\n  } finally {\n    if (_didIteratorError) {\n      throw _iteratorError;\n    }\n  }\n}\n```\n\n## Installation\n\n```sh\nnpm install --save-dev @babel/plugin-transform-for-of\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```js\n{\n  \"plugins\": [\"@babel/plugin-transform-for-of\"]\n}\n```\n\nWith options:\n\n```js\n{\n  \"plugins\": [\n    [\"@babel/plugin-transform-for-of\", {\n      \"loose\": true, // defaults to false\n      \"assumeArray\": true // defaults to false\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins @babel/plugin-transform-for-of script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"@babel/plugin-transform-for-of\"]\n});\n```\n\n## Options\n\n### `loose`\n\n`boolean`, defaults to `false`\n\nIn loose mode, arrays are put in a fast path, thus heavily increasing performance.\nAll other iterables will continue to work fine.\n\n#### Example\n\n**In**\n\n```js\nfor (var i of foo) {}\n```\n\n**Out**\n\n```js\nfor (var _iterator = foo, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  var _ref;\n\n  if (_isArray) {\n    if (_i >= _iterator.length) break;\n    _ref = _iterator[_i++];\n  } else {\n    _i = _iterator.next();\n    if (_i.done) break;\n    _ref = _i.value;\n  }\n\n  var i = _ref;\n}\n```\n\n#### Abrupt completions\n\nIn loose mode an iterator's `return` method will not be called on abrupt completions caused by thrown errors.\n\nPlease see [google/traceur-compiler#1773](https://github.com/google/traceur-compiler/issues/1773) and\n[babel/babel#838](https://github.com/babel/babel/issues/838) for more information.\n\n### `assumeArray`\n`boolean`, defaults to `false`\n\nThis will apply the optimization shown below to all for-of loops by assuming that _all_ loops are arrays.\n\nCan be useful when you just want a for-of loop to represent a basic for loop over an array.\n\n### Optimization\n\nIf a basic array is used, Babel will compile the for-of loop down to a regular for loop.\n\n**In**\n\n```js\nfor (let a of [1,2,3]) {}\n```\n\n**Out**\n\n```js\nvar _arr = [1, 2, 3];\nfor (var _i = 0; _i < _arr.length; _i++) {\n  var a = _arr[_i];\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-for-of"
  },
  "version": "7.0.0-beta.49"
}
