{
  "_args": [
    [
      {
        "raw": "@babel/plugin-transform-classes@https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
        "scope": "@babel",
        "escapedName": "@babel%2fplugin-transform-classes",
        "name": "@babel/plugin-transform-classes",
        "rawSpec": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
        "spec": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
        "type": "remote"
      },
      "/Users/administradorcito/Desktop/Polymer-junio-2018/Uzi/polymer/first-component/node_modules/polymer-cli"
    ]
  ],
  "_from": "@babel/plugin-transform-classes@https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
  "_id": "@babel/plugin-transform-classes@7.0.0-beta.35",
  "_inCache": true,
  "_location": "/polymer-cli/@babel/plugin-transform-classes",
  "_phantomChildren": {
    "color-convert": "1.9.2",
    "escape-string-regexp": "1.0.5",
    "esutils": "2.0.2",
    "has-flag": "3.0.0",
    "js-tokens": "3.0.2",
    "lodash": "4.17.10",
    "to-fast-properties": "2.0.0"
  },
  "_requested": {
    "raw": "@babel/plugin-transform-classes@https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
    "scope": "@babel",
    "escapedName": "@babel%2fplugin-transform-classes",
    "name": "@babel/plugin-transform-classes",
    "rawSpec": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
    "spec": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli",
    "/polymer-cli/polymer-build"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
  "_shasum": "ae1367d9c41081528f87d5770f6b8c6ee7141b52",
  "_shrinkwrap": null,
  "_spec": "@babel/plugin-transform-classes@https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.0.0-beta.35.tgz",
  "_where": "/Users/administradorcito/Desktop/Polymer-junio-2018/Uzi/polymer/first-component/node_modules/polymer-cli",
  "dependencies": {
    "@babel/helper-annotate-as-pure": "7.0.0-beta.35",
    "@babel/helper-define-map": "7.0.0-beta.35",
    "@babel/helper-function-name": "7.0.0-beta.35",
    "@babel/helper-optimise-call-expression": "7.0.0-beta.35",
    "@babel/helper-replace-supers": "7.0.0-beta.35"
  },
  "description": "Compile ES2015 classes to ES5",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.35",
    "@babel/helper-plugin-test-runner": "7.0.0-beta.35"
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "@babel/plugin-transform-classes",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.35"
  },
  "readme": "# @babel/plugin-transform-classes\n\n> Compile ES2015 classes to ES5\n\n## Caveats\n\nBuilt-in classes such as `Date`, `Array`, `DOM` etc cannot be properly subclassed\ndue to limitations in ES5 (for the [classes](http://babeljs.io/docs/plugins/transform-classes) plugin).\nYou can try to use [@babel/plugin-transform-builtin-extend](https://github.com/loganfsmyth/babel-plugin-transform-builtin-extend) based on `Object.setPrototypeOf` and `Reflect.construct`, but it also has some limitations.\n\n## Examples\n\n**In**\n\n```javascript\nclass Test {\n  constructor(name) {\n    this.name = name;\n  }\n\n  logger () {\n    console.log(\"Hello\", this.name);\n  }\n}\n```\n\n**Out**\n\n```javascript\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Test = function () {\n  function Test(name) {\n    _classCallCheck(this, Test);\n\n    this.name = name;\n  }\n\n  Test.prototype.logger = function logger() {\n    console.log(\"Hello\", this.name);\n  };\n\n  return Test;\n}();\n```\n\n## Installation\n\n```sh\nnpm install --save-dev @babel/plugin-transform-classes\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```js\n// without options\n{\n  \"plugins\": [\"@babel/plugin-transform-classes\"]\n}\n\n// with options\n{\n  \"plugins\": [\n    [\"@babel/plugin-transform-classes\", {\n      \"loose\": true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins @babel/plugin-transform-classes script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"@babel/plugin-transform-classes\"]\n});\n```\n\n## Options\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\n#### Method enumerability\n\nPlease note that in loose mode class methods **are** enumerable. This is not in line\nwith the spec and you may run into issues.\n\n#### Method assignment\n\nUnder loose mode, methods are defined on the class prototype with simple assignments\ninstead of being defined. This can result in the following not working:\n\n```javascript\nclass Foo {\n  set bar() {\n    throw new Error(\"foo!\");\n  }\n}\n\nclass Bar extends Foo {\n  bar() {\n    // will throw an error when this method is defined\n  }\n}\n```\n\nWhen `Bar.prototype.foo` is defined it triggers the setter on `Foo`. This is a\ncase that is very unlikely to appear in production code however it's something\nto keep in mind.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-classes"
  },
  "version": "7.0.0-beta.35"
}
